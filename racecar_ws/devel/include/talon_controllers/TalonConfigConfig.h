//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the talon_controllers package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __talon_controllers__TALONCONFIGCONFIG_H__
#define __talon_controllers__TALONCONFIGCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace talon_controllers
{
  class TalonConfigConfigStatics;

  class TalonConfigConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(TalonConfigConfig &config, const TalonConfigConfig &max, const TalonConfigConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const TalonConfigConfig &config1, const TalonConfigConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, TalonConfigConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const TalonConfigConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, TalonConfigConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const TalonConfigConfig &config) const = 0;
      virtual void getValue(const TalonConfigConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T TalonConfigConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (TalonConfigConfig::* field);

      virtual void clamp(TalonConfigConfig &config, const TalonConfigConfig &max, const TalonConfigConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const TalonConfigConfig &config1, const TalonConfigConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, TalonConfigConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const TalonConfigConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, TalonConfigConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const TalonConfigConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const TalonConfigConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, TalonConfigConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, TalonConfigConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<TalonConfigConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(TalonConfigConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("pid_config"==(*_i)->name){pid_config = boost::any_cast<int>(val);}
        if("p0"==(*_i)->name){p0 = boost::any_cast<double>(val);}
        if("i0"==(*_i)->name){i0 = boost::any_cast<double>(val);}
        if("d0"==(*_i)->name){d0 = boost::any_cast<double>(val);}
        if("f0"==(*_i)->name){f0 = boost::any_cast<double>(val);}
        if("izone0"==(*_i)->name){izone0 = boost::any_cast<double>(val);}
        if("allowable_closed_loop_error0"==(*_i)->name){allowable_closed_loop_error0 = boost::any_cast<double>(val);}
        if("max_integral_accumulator0"==(*_i)->name){max_integral_accumulator0 = boost::any_cast<double>(val);}
        if("closed_loop_peak_output0"==(*_i)->name){closed_loop_peak_output0 = boost::any_cast<double>(val);}
        if("closed_loop_period0"==(*_i)->name){closed_loop_period0 = boost::any_cast<int>(val);}
        if("p1"==(*_i)->name){p1 = boost::any_cast<double>(val);}
        if("i1"==(*_i)->name){i1 = boost::any_cast<double>(val);}
        if("d1"==(*_i)->name){d1 = boost::any_cast<double>(val);}
        if("f1"==(*_i)->name){f1 = boost::any_cast<double>(val);}
        if("izone1"==(*_i)->name){izone1 = boost::any_cast<double>(val);}
        if("allowable_closed_loop_error1"==(*_i)->name){allowable_closed_loop_error1 = boost::any_cast<double>(val);}
        if("max_integral_accumulator1"==(*_i)->name){max_integral_accumulator1 = boost::any_cast<double>(val);}
        if("closed_loop_peak_output1"==(*_i)->name){closed_loop_peak_output1 = boost::any_cast<double>(val);}
        if("closed_loop_period1"==(*_i)->name){closed_loop_period1 = boost::any_cast<int>(val);}
        if("demand1_type"==(*_i)->name){demand1_type = boost::any_cast<int>(val);}
        if("demand1_value"==(*_i)->name){demand1_value = boost::any_cast<double>(val);}
        if("aux_pid_polarity"==(*_i)->name){aux_pid_polarity = boost::any_cast<bool>(val);}
        if("invert_output"==(*_i)->name){invert_output = boost::any_cast<bool>(val);}
        if("sensor_phase"==(*_i)->name){sensor_phase = boost::any_cast<bool>(val);}
        if("encoder_ticks_per_rotation"==(*_i)->name){encoder_ticks_per_rotation = boost::any_cast<int>(val);}
        if("feedback_type"==(*_i)->name){feedback_type = boost::any_cast<int>(val);}
        if("closed_loop_ramp"==(*_i)->name){closed_loop_ramp = boost::any_cast<double>(val);}
        if("open_loop_ramp"==(*_i)->name){open_loop_ramp = boost::any_cast<double>(val);}
        if("peak_output_forward"==(*_i)->name){peak_output_forward = boost::any_cast<double>(val);}
        if("peak_output_reverse"==(*_i)->name){peak_output_reverse = boost::any_cast<double>(val);}
        if("nominal_output_forward"==(*_i)->name){nominal_output_forward = boost::any_cast<double>(val);}
        if("nominal_output_reverse"==(*_i)->name){nominal_output_reverse = boost::any_cast<double>(val);}
        if("neutral_deadband"==(*_i)->name){neutral_deadband = boost::any_cast<double>(val);}
        if("voltage_compensation_saturation"==(*_i)->name){voltage_compensation_saturation = boost::any_cast<double>(val);}
        if("voltage_measurement_filter"==(*_i)->name){voltage_measurement_filter = boost::any_cast<int>(val);}
        if("voltage_compensation_enable"==(*_i)->name){voltage_compensation_enable = boost::any_cast<bool>(val);}
        if("velocity_measurement_period"==(*_i)->name){velocity_measurement_period = boost::any_cast<int>(val);}
        if("velocity_measurement_window"==(*_i)->name){velocity_measurement_window = boost::any_cast<int>(val);}
        if("softlimit_forward_threshold"==(*_i)->name){softlimit_forward_threshold = boost::any_cast<double>(val);}
        if("softlimit_forward_enable"==(*_i)->name){softlimit_forward_enable = boost::any_cast<bool>(val);}
        if("softlimit_reverse_threshold"==(*_i)->name){softlimit_reverse_threshold = boost::any_cast<double>(val);}
        if("softlimit_reverse_enable"==(*_i)->name){softlimit_reverse_enable = boost::any_cast<bool>(val);}
        if("softlimits_override_enable"==(*_i)->name){softlimits_override_enable = boost::any_cast<bool>(val);}
        if("current_limit_peak_amps"==(*_i)->name){current_limit_peak_amps = boost::any_cast<int>(val);}
        if("current_limit_peak_msec"==(*_i)->name){current_limit_peak_msec = boost::any_cast<int>(val);}
        if("current_limit_continuous_amps"==(*_i)->name){current_limit_continuous_amps = boost::any_cast<int>(val);}
        if("current_limit_enable"==(*_i)->name){current_limit_enable = boost::any_cast<bool>(val);}
        if("motion_cruise_velocity"==(*_i)->name){motion_cruise_velocity = boost::any_cast<double>(val);}
        if("motion_acceleration"==(*_i)->name){motion_acceleration = boost::any_cast<double>(val);}
        if("motion_s_curve_strength"==(*_i)->name){motion_s_curve_strength = boost::any_cast<int>(val);}
        if("status_1_general_period"==(*_i)->name){status_1_general_period = boost::any_cast<int>(val);}
        if("status_2_feedback0_period"==(*_i)->name){status_2_feedback0_period = boost::any_cast<int>(val);}
        if("status_3_quadrature_period"==(*_i)->name){status_3_quadrature_period = boost::any_cast<int>(val);}
        if("status_4_aintempvbat_period"==(*_i)->name){status_4_aintempvbat_period = boost::any_cast<int>(val);}
        if("status_6_misc_period"==(*_i)->name){status_6_misc_period = boost::any_cast<int>(val);}
        if("status_7_commstatus_period"==(*_i)->name){status_7_commstatus_period = boost::any_cast<int>(val);}
        if("status_8_pulsewidth_period"==(*_i)->name){status_8_pulsewidth_period = boost::any_cast<int>(val);}
        if("status_9_motprofbuffer_period"==(*_i)->name){status_9_motprofbuffer_period = boost::any_cast<int>(val);}
        if("status_10_motionmagic_period"==(*_i)->name){status_10_motionmagic_period = boost::any_cast<int>(val);}
        if("status_11_uartgadgeteer_period"==(*_i)->name){status_11_uartgadgeteer_period = boost::any_cast<int>(val);}
        if("status_12_feedback1_period"==(*_i)->name){status_12_feedback1_period = boost::any_cast<int>(val);}
        if("status_13_base_pidf0_period"==(*_i)->name){status_13_base_pidf0_period = boost::any_cast<int>(val);}
        if("status_14_turn_pidf1_period"==(*_i)->name){status_14_turn_pidf1_period = boost::any_cast<int>(val);}
        if("status_15_firmwareapistatus_period"==(*_i)->name){status_15_firmwareapistatus_period = boost::any_cast<int>(val);}
        if("motion_profile_trajectory_period"==(*_i)->name){motion_profile_trajectory_period = boost::any_cast<int>(val);}
        if("control_3_general_period"==(*_i)->name){control_3_general_period = boost::any_cast<int>(val);}
        if("control_4_advanced_period"==(*_i)->name){control_4_advanced_period = boost::any_cast<int>(val);}
        if("control_5_feedbackoutputoverride_period"==(*_i)->name){control_5_feedbackoutputoverride_period = boost::any_cast<int>(val);}
        if("control_6_motprofaddtrajpoint_period"==(*_i)->name){control_6_motprofaddtrajpoint_period = boost::any_cast<int>(val);}
        if("neutral_mode"==(*_i)->name){neutral_mode = boost::any_cast<int>(val);}
        if("feedback_coefficient"==(*_i)->name){feedback_coefficient = boost::any_cast<double>(val);}
        if("limit_switch_local_forward_source"==(*_i)->name){limit_switch_local_forward_source = boost::any_cast<int>(val);}
        if("limit_switch_local_forward_normal"==(*_i)->name){limit_switch_local_forward_normal = boost::any_cast<int>(val);}
        if("limit_switch_local_reverse_source"==(*_i)->name){limit_switch_local_reverse_source = boost::any_cast<int>(val);}
        if("limit_switch_local_reverse_normal"==(*_i)->name){limit_switch_local_reverse_normal = boost::any_cast<int>(val);}
        if("limit_switch_remote_forward_source"==(*_i)->name){limit_switch_remote_forward_source = boost::any_cast<int>(val);}
        if("limit_switch_remote_forward_normal"==(*_i)->name){limit_switch_remote_forward_normal = boost::any_cast<int>(val);}
        if("limit_switch_remote_reverse_source"==(*_i)->name){limit_switch_remote_reverse_source = boost::any_cast<int>(val);}
        if("limit_switch_remote_reverse_normal"==(*_i)->name){limit_switch_remote_reverse_normal = boost::any_cast<int>(val);}
        if("conversion_factor"==(*_i)->name){conversion_factor = boost::any_cast<double>(val);}
        if("custom_profile_hz"==(*_i)->name){custom_profile_hz = boost::any_cast<double>(val);}
        if("custom_profile_run"==(*_i)->name){custom_profile_run = boost::any_cast<bool>(val);}
        if("custom_profile_slot"==(*_i)->name){custom_profile_slot = boost::any_cast<int>(val);}
      }
    }

    int pid_config;
double p0;
double i0;
double d0;
double f0;
double izone0;
double allowable_closed_loop_error0;
double max_integral_accumulator0;
double closed_loop_peak_output0;
int closed_loop_period0;
double p1;
double i1;
double d1;
double f1;
double izone1;
double allowable_closed_loop_error1;
double max_integral_accumulator1;
double closed_loop_peak_output1;
int closed_loop_period1;
int demand1_type;
double demand1_value;
bool aux_pid_polarity;
bool invert_output;
bool sensor_phase;
int encoder_ticks_per_rotation;
int feedback_type;
double closed_loop_ramp;
double open_loop_ramp;
double peak_output_forward;
double peak_output_reverse;
double nominal_output_forward;
double nominal_output_reverse;
double neutral_deadband;
double voltage_compensation_saturation;
int voltage_measurement_filter;
bool voltage_compensation_enable;
int velocity_measurement_period;
int velocity_measurement_window;
double softlimit_forward_threshold;
bool softlimit_forward_enable;
double softlimit_reverse_threshold;
bool softlimit_reverse_enable;
bool softlimits_override_enable;
int current_limit_peak_amps;
int current_limit_peak_msec;
int current_limit_continuous_amps;
bool current_limit_enable;
double motion_cruise_velocity;
double motion_acceleration;
int motion_s_curve_strength;
int status_1_general_period;
int status_2_feedback0_period;
int status_3_quadrature_period;
int status_4_aintempvbat_period;
int status_6_misc_period;
int status_7_commstatus_period;
int status_8_pulsewidth_period;
int status_9_motprofbuffer_period;
int status_10_motionmagic_period;
int status_11_uartgadgeteer_period;
int status_12_feedback1_period;
int status_13_base_pidf0_period;
int status_14_turn_pidf1_period;
int status_15_firmwareapistatus_period;
int motion_profile_trajectory_period;
int control_3_general_period;
int control_4_advanced_period;
int control_5_feedbackoutputoverride_period;
int control_6_motprofaddtrajpoint_period;
int neutral_mode;
double feedback_coefficient;
int limit_switch_local_forward_source;
int limit_switch_local_forward_normal;
int limit_switch_local_reverse_source;
int limit_switch_local_reverse_normal;
int limit_switch_remote_forward_source;
int limit_switch_remote_forward_normal;
int limit_switch_remote_reverse_source;
int limit_switch_remote_reverse_normal;
double conversion_factor;
double custom_profile_hz;
bool custom_profile_run;
int custom_profile_slot;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int pid_config;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double p0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double i0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double d0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double f0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double izone0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double allowable_closed_loop_error0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_integral_accumulator0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double closed_loop_peak_output0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int closed_loop_period0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double p1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double i1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double d1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double f1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double izone1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double allowable_closed_loop_error1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_integral_accumulator1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double closed_loop_peak_output1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int closed_loop_period1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int demand1_type;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double demand1_value;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool aux_pid_polarity;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool invert_output;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool sensor_phase;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int encoder_ticks_per_rotation;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int feedback_type;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double closed_loop_ramp;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double open_loop_ramp;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double peak_output_forward;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double peak_output_reverse;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double nominal_output_forward;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double nominal_output_reverse;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double neutral_deadband;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double voltage_compensation_saturation;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int voltage_measurement_filter;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool voltage_compensation_enable;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int velocity_measurement_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int velocity_measurement_window;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double softlimit_forward_threshold;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool softlimit_forward_enable;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double softlimit_reverse_threshold;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool softlimit_reverse_enable;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool softlimits_override_enable;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int current_limit_peak_amps;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int current_limit_peak_msec;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int current_limit_continuous_amps;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool current_limit_enable;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double motion_cruise_velocity;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double motion_acceleration;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int motion_s_curve_strength;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_1_general_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_2_feedback0_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_3_quadrature_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_4_aintempvbat_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_6_misc_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_7_commstatus_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_8_pulsewidth_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_9_motprofbuffer_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_10_motionmagic_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_11_uartgadgeteer_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_12_feedback1_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_13_base_pidf0_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_14_turn_pidf1_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int status_15_firmwareapistatus_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int motion_profile_trajectory_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int control_3_general_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int control_4_advanced_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int control_5_feedbackoutputoverride_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int control_6_motprofaddtrajpoint_period;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int neutral_mode;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double feedback_coefficient;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_local_forward_source;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_local_forward_normal;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_local_reverse_source;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_local_reverse_normal;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_remote_forward_source;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_remote_forward_normal;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_remote_reverse_source;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int limit_switch_remote_reverse_normal;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double conversion_factor;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double custom_profile_hz;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool custom_profile_run;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int custom_profile_slot;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("TalonConfigConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const TalonConfigConfig &__max__ = __getMax__();
      const TalonConfigConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const TalonConfigConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const TalonConfigConfig &__getDefault__();
    static const TalonConfigConfig &__getMax__();
    static const TalonConfigConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const TalonConfigConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void TalonConfigConfig::ParamDescription<std::string>::clamp(TalonConfigConfig &config, const TalonConfigConfig &max, const TalonConfigConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class TalonConfigConfigStatics
  {
    friend class TalonConfigConfig;

    TalonConfigConfigStatics()
    {
TalonConfigConfig::GroupDescription<TalonConfigConfig::DEFAULT, TalonConfigConfig> Default("Default", "", 0, 0, true, &TalonConfigConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.pid_config = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.pid_config = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.pid_config = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("pid_config", "int", 0, "Choose between two different PID config values", "", &TalonConfigConfig::pid_config)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("pid_config", "int", 0, "Choose between two different PID config values", "", &TalonConfigConfig::pid_config)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.p0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.p0 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.p0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("p0", "double", 0, "Proportional constant 0", "", &TalonConfigConfig::p0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("p0", "double", 0, "Proportional constant 0", "", &TalonConfigConfig::p0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.i0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.i0 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.i0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("i0", "double", 0, "Integral constant 0", "", &TalonConfigConfig::i0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("i0", "double", 0, "Integral constant 0", "", &TalonConfigConfig::i0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.d0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.d0 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.d0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("d0", "double", 0, "Derivative constant 0", "", &TalonConfigConfig::d0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("d0", "double", 0, "Derivative constant 0", "", &TalonConfigConfig::d0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.f0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.f0 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.f0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("f0", "double", 0, "Feed forward constant 0", "", &TalonConfigConfig::f0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("f0", "double", 0, "Feed forward constant 0", "", &TalonConfigConfig::f0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.izone0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.izone0 = 100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.izone0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("izone0", "double", 0, "Limits integral error to certain range 0", "", &TalonConfigConfig::izone0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("izone0", "double", 0, "Limits integral error to certain range 0", "", &TalonConfigConfig::izone0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.allowable_closed_loop_error0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.allowable_closed_loop_error0 = 10000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.allowable_closed_loop_error0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("allowable_closed_loop_error0", "double", 0, "Max difference between setpoint and current value 0", "", &TalonConfigConfig::allowable_closed_loop_error0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("allowable_closed_loop_error0", "double", 0, "Max difference between setpoint and current value 0", "", &TalonConfigConfig::allowable_closed_loop_error0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_integral_accumulator0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_integral_accumulator0 = 100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_integral_accumulator0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("max_integral_accumulator0", "double", 0, "Max integral accumulator 0", "", &TalonConfigConfig::max_integral_accumulator0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("max_integral_accumulator0", "double", 0, "Max integral accumulator 0", "", &TalonConfigConfig::max_integral_accumulator0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.closed_loop_peak_output0 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.closed_loop_peak_output0 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.closed_loop_peak_output0 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("closed_loop_peak_output0", "double", 0, "Peak output for PID slot 0", "", &TalonConfigConfig::closed_loop_peak_output0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("closed_loop_peak_output0", "double", 0, "Peak output for PID slot 0", "", &TalonConfigConfig::closed_loop_peak_output0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.closed_loop_period0 = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.closed_loop_period0 = 1000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.closed_loop_period0 = 20;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("closed_loop_period0", "int", 0, "PID loop period for slot 0", "", &TalonConfigConfig::closed_loop_period0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("closed_loop_period0", "int", 0, "PID loop period for slot 0", "", &TalonConfigConfig::closed_loop_period0)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.p1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.p1 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.p1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("p1", "double", 0, "Proportional constant 1", "", &TalonConfigConfig::p1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("p1", "double", 0, "Proportional constant 1", "", &TalonConfigConfig::p1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.i1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.i1 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.i1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("i1", "double", 0, "Integral constant 1", "", &TalonConfigConfig::i1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("i1", "double", 0, "Integral constant 1", "", &TalonConfigConfig::i1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.d1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.d1 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.d1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("d1", "double", 0, "Derivative constant 1", "", &TalonConfigConfig::d1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("d1", "double", 0, "Derivative constant 1", "", &TalonConfigConfig::d1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.f1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.f1 = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.f1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("f1", "double", 0, "Feed forward constant 1", "", &TalonConfigConfig::f1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("f1", "double", 0, "Feed forward constant 1", "", &TalonConfigConfig::f1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.izone1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.izone1 = 100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.izone1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("izone1", "double", 0, "Limits integral error to certain range 1", "", &TalonConfigConfig::izone1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("izone1", "double", 0, "Limits integral error to certain range 1", "", &TalonConfigConfig::izone1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.allowable_closed_loop_error1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.allowable_closed_loop_error1 = 10000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.allowable_closed_loop_error1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("allowable_closed_loop_error1", "double", 0, "Max difference between setpoint and current value 1", "", &TalonConfigConfig::allowable_closed_loop_error1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("allowable_closed_loop_error1", "double", 0, "Max difference between setpoint and current value 1", "", &TalonConfigConfig::allowable_closed_loop_error1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_integral_accumulator1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_integral_accumulator1 = 100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_integral_accumulator1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("max_integral_accumulator1", "double", 0, "Max integral accumulator 1", "", &TalonConfigConfig::max_integral_accumulator1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("max_integral_accumulator1", "double", 0, "Max integral accumulator 1", "", &TalonConfigConfig::max_integral_accumulator1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.closed_loop_peak_output1 = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.closed_loop_peak_output1 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.closed_loop_peak_output1 = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("closed_loop_peak_output1", "double", 0, "Peak output for PID slot 1", "", &TalonConfigConfig::closed_loop_peak_output1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("closed_loop_peak_output1", "double", 0, "Peak output for PID slot 1", "", &TalonConfigConfig::closed_loop_peak_output1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.closed_loop_period1 = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.closed_loop_period1 = 1000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.closed_loop_period1 = 20;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("closed_loop_period1", "int", 0, "PID loop period for slot 1", "", &TalonConfigConfig::closed_loop_period1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("closed_loop_period1", "int", 0, "PID loop period for slot 1", "", &TalonConfigConfig::closed_loop_period1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.demand1_type = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.demand1_type = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.demand1_type = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("demand1_type", "int", 0, "Demand1 Type Setting", "{'enum_description': '', 'enum': [{'srcline': 30, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'DemandType_Neutral'}, {'srcline': 31, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'DemandType_AuxPID'}, {'srcline': 32, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'DemandType_ArbitraryFeedForward'}]}", &TalonConfigConfig::demand1_type)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("demand1_type", "int", 0, "Demand1 Type Setting", "{'enum_description': '', 'enum': [{'srcline': 30, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'DemandType_Neutral'}, {'srcline': 31, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'DemandType_AuxPID'}, {'srcline': 32, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'DemandType_ArbitraryFeedForward'}]}", &TalonConfigConfig::demand1_type)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.demand1_value = -1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.demand1_value = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.demand1_value = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("demand1_value", "double", 0, "Demand1 Value Setting", "", &TalonConfigConfig::demand1_value)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("demand1_value", "double", 0, "Demand1 Value Setting", "", &TalonConfigConfig::demand1_value)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.aux_pid_polarity = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.aux_pid_polarity = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.aux_pid_polarity = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("aux_pid_polarity", "bool", 0, "Invert output of aux PID loop", "", &TalonConfigConfig::aux_pid_polarity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("aux_pid_polarity", "bool", 0, "Invert output of aux PID loop", "", &TalonConfigConfig::aux_pid_polarity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.invert_output = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.invert_output = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.invert_output = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("invert_output", "bool", 0, "Invert output of talon", "", &TalonConfigConfig::invert_output)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("invert_output", "bool", 0, "Invert output of talon", "", &TalonConfigConfig::invert_output)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sensor_phase = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sensor_phase = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sensor_phase = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("sensor_phase", "bool", 0, "Inverts value of sensor (encoder)", "", &TalonConfigConfig::sensor_phase)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("sensor_phase", "bool", 0, "Inverts value of sensor (encoder)", "", &TalonConfigConfig::sensor_phase)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.encoder_ticks_per_rotation = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.encoder_ticks_per_rotation = 10000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.encoder_ticks_per_rotation = 4096;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("encoder_ticks_per_rotation", "int", 0, "Dependent on encoder type", "", &TalonConfigConfig::encoder_ticks_per_rotation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("encoder_ticks_per_rotation", "int", 0, "Dependent on encoder type", "", &TalonConfigConfig::encoder_ticks_per_rotation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.feedback_type = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.feedback_type = 12;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.feedback_type = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("feedback_type", "int", 0, "Different types of encoders (determines units)", "{'enum_description': '', 'enum': [{'srcline': 42, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Feedback_Uninitialized'}, {'srcline': 43, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'QuadEncoder'}, {'srcline': 44, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Analog'}, {'srcline': 45, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Tachometer'}, {'srcline': 46, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'PulseWidthEncodedPosition'}, {'srcline': 47, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'SensorSum'}, {'srcline': 48, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'SensorDifference'}, {'srcline': 49, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'Inertial'}, {'srcline': 50, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 8, 'ctype': 'int', 'type': 'int', 'name': 'RemoteSensor'}, {'srcline': 51, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': 'SoftwareEmulatedSensor'}, {'srcline': 52, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'CTRE_Magencoder_Absolute'}, {'srcline': 53, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'CTRE_Magencoder_Relative'}]}", &TalonConfigConfig::feedback_type)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("feedback_type", "int", 0, "Different types of encoders (determines units)", "{'enum_description': '', 'enum': [{'srcline': 42, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Feedback_Uninitialized'}, {'srcline': 43, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'QuadEncoder'}, {'srcline': 44, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Analog'}, {'srcline': 45, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Tachometer'}, {'srcline': 46, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'PulseWidthEncodedPosition'}, {'srcline': 47, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'SensorSum'}, {'srcline': 48, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'SensorDifference'}, {'srcline': 49, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'Inertial'}, {'srcline': 50, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 8, 'ctype': 'int', 'type': 'int', 'name': 'RemoteSensor'}, {'srcline': 51, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': 'SoftwareEmulatedSensor'}, {'srcline': 52, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'CTRE_Magencoder_Absolute'}, {'srcline': 53, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'CTRE_Magencoder_Relative'}]}", &TalonConfigConfig::feedback_type)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.closed_loop_ramp = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.closed_loop_ramp = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.closed_loop_ramp = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("closed_loop_ramp", "double", 0, "Ramp rate to prevent instantaneous changes in output", "", &TalonConfigConfig::closed_loop_ramp)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("closed_loop_ramp", "double", 0, "Ramp rate to prevent instantaneous changes in output", "", &TalonConfigConfig::closed_loop_ramp)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.open_loop_ramp = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.open_loop_ramp = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.open_loop_ramp = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("open_loop_ramp", "double", 0, "Ramp rate to present intantaneous changes in output", "", &TalonConfigConfig::open_loop_ramp)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("open_loop_ramp", "double", 0, "Ramp rate to present intantaneous changes in output", "", &TalonConfigConfig::open_loop_ramp)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.peak_output_forward = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.peak_output_forward = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.peak_output_forward = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("peak_output_forward", "double", 0, "Max output voltage", "", &TalonConfigConfig::peak_output_forward)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("peak_output_forward", "double", 0, "Max output voltage", "", &TalonConfigConfig::peak_output_forward)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.peak_output_reverse = -1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.peak_output_reverse = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.peak_output_reverse = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("peak_output_reverse", "double", 0, "Max output voltage in opposite direction", "", &TalonConfigConfig::peak_output_reverse)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("peak_output_reverse", "double", 0, "Max output voltage in opposite direction", "", &TalonConfigConfig::peak_output_reverse)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.nominal_output_forward = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.nominal_output_forward = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.nominal_output_forward = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("nominal_output_forward", "double", 0, "Min output voltage", "", &TalonConfigConfig::nominal_output_forward)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("nominal_output_forward", "double", 0, "Min output voltage", "", &TalonConfigConfig::nominal_output_forward)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.nominal_output_reverse = -1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.nominal_output_reverse = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.nominal_output_reverse = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("nominal_output_reverse", "double", 0, "Min output voltage in opposite direction", "", &TalonConfigConfig::nominal_output_reverse)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("nominal_output_reverse", "double", 0, "Min output voltage in opposite direction", "", &TalonConfigConfig::nominal_output_reverse)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.neutral_deadband = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.neutral_deadband = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.neutral_deadband = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("neutral_deadband", "double", 0, "Joystick dead range", "", &TalonConfigConfig::neutral_deadband)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("neutral_deadband", "double", 0, "Joystick dead range", "", &TalonConfigConfig::neutral_deadband)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.voltage_compensation_saturation = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.voltage_compensation_saturation = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.voltage_compensation_saturation = 12.5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("voltage_compensation_saturation", "double", 0, "Ideal voltage value used for voltage compensation", "", &TalonConfigConfig::voltage_compensation_saturation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("voltage_compensation_saturation", "double", 0, "Ideal voltage value used for voltage compensation", "", &TalonConfigConfig::voltage_compensation_saturation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.voltage_measurement_filter = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.voltage_measurement_filter = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.voltage_measurement_filter = 32;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("voltage_measurement_filter", "int", 0, "The number of values taken into voltage average", "", &TalonConfigConfig::voltage_measurement_filter)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("voltage_measurement_filter", "int", 0, "The number of values taken into voltage average", "", &TalonConfigConfig::voltage_measurement_filter)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.voltage_compensation_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.voltage_compensation_enable = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.voltage_compensation_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("voltage_compensation_enable", "bool", 0, "Enable or disable voltage compensation", "", &TalonConfigConfig::voltage_compensation_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("voltage_compensation_enable", "bool", 0, "Enable or disable voltage compensation", "", &TalonConfigConfig::voltage_compensation_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.velocity_measurement_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.velocity_measurement_period = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.velocity_measurement_period = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("velocity_measurement_period", "int", 0, "How often to report velocity data from sensors", "{'enum_description': '', 'enum': [{'srcline': 69, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Period_1Ms'}, {'srcline': 70, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Period_2Ms'}, {'srcline': 71, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'Period_5Ms'}, {'srcline': 72, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': 'Period_10Ms'}, {'srcline': 73, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 20, 'ctype': 'int', 'type': 'int', 'name': 'Period_20Ms'}, {'srcline': 74, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 25, 'ctype': 'int', 'type': 'int', 'name': 'Period_25Ms'}, {'srcline': 75, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 50, 'ctype': 'int', 'type': 'int', 'name': 'Period_50Ms'}, {'srcline': 76, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 100, 'ctype': 'int', 'type': 'int', 'name': 'Period_100Ms'}]}", &TalonConfigConfig::velocity_measurement_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("velocity_measurement_period", "int", 0, "How often to report velocity data from sensors", "{'enum_description': '', 'enum': [{'srcline': 69, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Period_1Ms'}, {'srcline': 70, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Period_2Ms'}, {'srcline': 71, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'Period_5Ms'}, {'srcline': 72, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': 'Period_10Ms'}, {'srcline': 73, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 20, 'ctype': 'int', 'type': 'int', 'name': 'Period_20Ms'}, {'srcline': 74, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 25, 'ctype': 'int', 'type': 'int', 'name': 'Period_25Ms'}, {'srcline': 75, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 50, 'ctype': 'int', 'type': 'int', 'name': 'Period_50Ms'}, {'srcline': 76, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 100, 'ctype': 'int', 'type': 'int', 'name': 'Period_100Ms'}]}", &TalonConfigConfig::velocity_measurement_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.velocity_measurement_window = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.velocity_measurement_window = 256;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.velocity_measurement_window = 64;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("velocity_measurement_window", "int", 0, "The number of values taken into velocity average", "", &TalonConfigConfig::velocity_measurement_window)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("velocity_measurement_window", "int", 0, "The number of values taken into velocity average", "", &TalonConfigConfig::velocity_measurement_window)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.softlimit_forward_threshold = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.softlimit_forward_threshold = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.softlimit_forward_threshold = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("softlimit_forward_threshold", "double", 0, "Top threshold to disable talons outside certain range", "", &TalonConfigConfig::softlimit_forward_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("softlimit_forward_threshold", "double", 0, "Top threshold to disable talons outside certain range", "", &TalonConfigConfig::softlimit_forward_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.softlimit_forward_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.softlimit_forward_enable = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.softlimit_forward_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("softlimit_forward_enable", "bool", 0, "Enable or disable top soft limit threshold", "", &TalonConfigConfig::softlimit_forward_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("softlimit_forward_enable", "bool", 0, "Enable or disable top soft limit threshold", "", &TalonConfigConfig::softlimit_forward_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.softlimit_reverse_threshold = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.softlimit_reverse_threshold = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.softlimit_reverse_threshold = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("softlimit_reverse_threshold", "double", 0, "Bottom threshold to disable talons outside range", "", &TalonConfigConfig::softlimit_reverse_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("softlimit_reverse_threshold", "double", 0, "Bottom threshold to disable talons outside range", "", &TalonConfigConfig::softlimit_reverse_threshold)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.softlimit_reverse_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.softlimit_reverse_enable = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.softlimit_reverse_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("softlimit_reverse_enable", "bool", 0, "Enable or disable bottom soft limit threshold", "", &TalonConfigConfig::softlimit_reverse_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("softlimit_reverse_enable", "bool", 0, "Enable or disable bottom soft limit threshold", "", &TalonConfigConfig::softlimit_reverse_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.softlimits_override_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.softlimits_override_enable = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.softlimits_override_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("softlimits_override_enable", "bool", 0, "Override previous soft limit settings and disable", "", &TalonConfigConfig::softlimits_override_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("softlimits_override_enable", "bool", 0, "Override previous soft limit settings and disable", "", &TalonConfigConfig::softlimits_override_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.current_limit_peak_amps = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.current_limit_peak_amps = 300;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.current_limit_peak_amps = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("current_limit_peak_amps", "int", 0, "Current amperage limit", "", &TalonConfigConfig::current_limit_peak_amps)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("current_limit_peak_amps", "int", 0, "Current amperage limit", "", &TalonConfigConfig::current_limit_peak_amps)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.current_limit_peak_msec = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.current_limit_peak_msec = 20000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.current_limit_peak_msec = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("current_limit_peak_msec", "int", 0, "Configure peak current limit to threshold", "", &TalonConfigConfig::current_limit_peak_msec)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("current_limit_peak_msec", "int", 0, "Configure peak current limit to threshold", "", &TalonConfigConfig::current_limit_peak_msec)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.current_limit_continuous_amps = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.current_limit_continuous_amps = 300;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.current_limit_continuous_amps = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("current_limit_continuous_amps", "int", 0, "Configure peak current duration to allowable", "", &TalonConfigConfig::current_limit_continuous_amps)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("current_limit_continuous_amps", "int", 0, "Configure peak current duration to allowable", "", &TalonConfigConfig::current_limit_continuous_amps)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.current_limit_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.current_limit_enable = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.current_limit_enable = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("current_limit_enable", "bool", 0, "Enable or disable current limiting", "", &TalonConfigConfig::current_limit_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("current_limit_enable", "bool", 0, "Enable or disable current limiting", "", &TalonConfigConfig::current_limit_enable)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.motion_cruise_velocity = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.motion_cruise_velocity = 100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.motion_cruise_velocity = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("motion_cruise_velocity", "double", 0, "Max velocity of talon while trying to move to target", "", &TalonConfigConfig::motion_cruise_velocity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("motion_cruise_velocity", "double", 0, "Max velocity of talon while trying to move to target", "", &TalonConfigConfig::motion_cruise_velocity)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.motion_acceleration = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.motion_acceleration = 100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.motion_acceleration = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("motion_acceleration", "double", 0, "Max acceleration of talon while trying to move", "", &TalonConfigConfig::motion_acceleration)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("motion_acceleration", "double", 0, "Max acceleration of talon while trying to move", "", &TalonConfigConfig::motion_acceleration)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.motion_s_curve_strength = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.motion_s_curve_strength = 8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.motion_s_curve_strength = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("motion_s_curve_strength", "int", 0, "Amount of smoothing of motion magic curve", "", &TalonConfigConfig::motion_s_curve_strength)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("motion_s_curve_strength", "int", 0, "Amount of smoothing of motion magic curve", "", &TalonConfigConfig::motion_s_curve_strength)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_1_general_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_1_general_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_1_general_period = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_1_general_period", "int", 0, "Status frame period 1", "", &TalonConfigConfig::status_1_general_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_1_general_period", "int", 0, "Status frame period 1", "", &TalonConfigConfig::status_1_general_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_2_feedback0_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_2_feedback0_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_2_feedback0_period = 20;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_2_feedback0_period", "int", 0, "Status frame period 2", "", &TalonConfigConfig::status_2_feedback0_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_2_feedback0_period", "int", 0, "Status frame period 2", "", &TalonConfigConfig::status_2_feedback0_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_3_quadrature_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_3_quadrature_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_3_quadrature_period = 160;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_3_quadrature_period", "int", 0, "Status frame period 3", "", &TalonConfigConfig::status_3_quadrature_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_3_quadrature_period", "int", 0, "Status frame period 3", "", &TalonConfigConfig::status_3_quadrature_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_4_aintempvbat_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_4_aintempvbat_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_4_aintempvbat_period = 160;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_4_aintempvbat_period", "int", 0, "Status frame period 4", "", &TalonConfigConfig::status_4_aintempvbat_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_4_aintempvbat_period", "int", 0, "Status frame period 4", "", &TalonConfigConfig::status_4_aintempvbat_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_6_misc_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_6_misc_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_6_misc_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_6_misc_period", "int", 0, "Status frame period 6", "", &TalonConfigConfig::status_6_misc_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_6_misc_period", "int", 0, "Status frame period 6", "", &TalonConfigConfig::status_6_misc_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_7_commstatus_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_7_commstatus_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_7_commstatus_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_7_commstatus_period", "int", 0, "Status frame period 7", "", &TalonConfigConfig::status_7_commstatus_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_7_commstatus_period", "int", 0, "Status frame period 7", "", &TalonConfigConfig::status_7_commstatus_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_8_pulsewidth_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_8_pulsewidth_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_8_pulsewidth_period = 160;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_8_pulsewidth_period", "int", 0, "Status frame period 8", "", &TalonConfigConfig::status_8_pulsewidth_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_8_pulsewidth_period", "int", 0, "Status frame period 8", "", &TalonConfigConfig::status_8_pulsewidth_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_9_motprofbuffer_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_9_motprofbuffer_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_9_motprofbuffer_period = 50;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_9_motprofbuffer_period", "int", 0, "Status frame period 9", "", &TalonConfigConfig::status_9_motprofbuffer_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_9_motprofbuffer_period", "int", 0, "Status frame period 9", "", &TalonConfigConfig::status_9_motprofbuffer_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_10_motionmagic_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_10_motionmagic_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_10_motionmagic_period = 160;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_10_motionmagic_period", "int", 0, "Status frame period 10", "", &TalonConfigConfig::status_10_motionmagic_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_10_motionmagic_period", "int", 0, "Status frame period 10", "", &TalonConfigConfig::status_10_motionmagic_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_11_uartgadgeteer_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_11_uartgadgeteer_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_11_uartgadgeteer_period = 250;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_11_uartgadgeteer_period", "int", 0, "Status frame period 11", "", &TalonConfigConfig::status_11_uartgadgeteer_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_11_uartgadgeteer_period", "int", 0, "Status frame period 11", "", &TalonConfigConfig::status_11_uartgadgeteer_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_12_feedback1_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_12_feedback1_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_12_feedback1_period = 250;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_12_feedback1_period", "int", 0, "Status frame period 12", "", &TalonConfigConfig::status_12_feedback1_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_12_feedback1_period", "int", 0, "Status frame period 12", "", &TalonConfigConfig::status_12_feedback1_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_13_base_pidf0_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_13_base_pidf0_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_13_base_pidf0_period = 160;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_13_base_pidf0_period", "int", 0, "Status frame period 13", "", &TalonConfigConfig::status_13_base_pidf0_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_13_base_pidf0_period", "int", 0, "Status frame period 13", "", &TalonConfigConfig::status_13_base_pidf0_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_14_turn_pidf1_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_14_turn_pidf1_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_14_turn_pidf1_period = 250;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_14_turn_pidf1_period", "int", 0, "Status frame period 14", "", &TalonConfigConfig::status_14_turn_pidf1_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_14_turn_pidf1_period", "int", 0, "Status frame period 14", "", &TalonConfigConfig::status_14_turn_pidf1_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.status_15_firmwareapistatus_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.status_15_firmwareapistatus_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.status_15_firmwareapistatus_period = 160;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_15_firmwareapistatus_period", "int", 0, "Status frame period 15", "", &TalonConfigConfig::status_15_firmwareapistatus_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("status_15_firmwareapistatus_period", "int", 0, "Status frame period 15", "", &TalonConfigConfig::status_15_firmwareapistatus_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.motion_profile_trajectory_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.motion_profile_trajectory_period = 2000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.motion_profile_trajectory_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("motion_profile_trajectory_period", "int", 0, "Base period added to each trajectory duration", "", &TalonConfigConfig::motion_profile_trajectory_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("motion_profile_trajectory_period", "int", 0, "Base period added to each trajectory duration", "", &TalonConfigConfig::motion_profile_trajectory_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.control_3_general_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.control_3_general_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.control_3_general_period = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_3_general_period", "int", 0, "Control frame period 3", "", &TalonConfigConfig::control_3_general_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_3_general_period", "int", 0, "Control frame period 3", "", &TalonConfigConfig::control_3_general_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.control_4_advanced_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.control_4_advanced_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.control_4_advanced_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_4_advanced_period", "int", 0, "Control frame period 4", "", &TalonConfigConfig::control_4_advanced_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_4_advanced_period", "int", 0, "Control frame period 4", "", &TalonConfigConfig::control_4_advanced_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.control_5_feedbackoutputoverride_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.control_5_feedbackoutputoverride_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.control_5_feedbackoutputoverride_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_5_feedbackoutputoverride_period", "int", 0, "Control frame period 5", "", &TalonConfigConfig::control_5_feedbackoutputoverride_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_5_feedbackoutputoverride_period", "int", 0, "Control frame period 5", "", &TalonConfigConfig::control_5_feedbackoutputoverride_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.control_6_motprofaddtrajpoint_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.control_6_motprofaddtrajpoint_period = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.control_6_motprofaddtrajpoint_period = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_6_motprofaddtrajpoint_period", "int", 0, "Control frame period 6", "", &TalonConfigConfig::control_6_motprofaddtrajpoint_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("control_6_motprofaddtrajpoint_period", "int", 0, "Control frame period 6", "", &TalonConfigConfig::control_6_motprofaddtrajpoint_period)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.neutral_mode = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.neutral_mode = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.neutral_mode = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("neutral_mode", "int", 0, "Mode of operation during neutral output", "{'enum_description': '', 'enum': [{'srcline': 115, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'NeutralMode_Uninitialized'}, {'srcline': 116, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'EEPROM_Setting'}, {'srcline': 117, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Coast'}, {'srcline': 118, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Brake'}]}", &TalonConfigConfig::neutral_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("neutral_mode", "int", 0, "Mode of operation during neutral output", "{'enum_description': '', 'enum': [{'srcline': 115, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'NeutralMode_Uninitialized'}, {'srcline': 116, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'EEPROM_Setting'}, {'srcline': 117, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Coast'}, {'srcline': 118, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Brake'}]}", &TalonConfigConfig::neutral_mode)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.feedback_coefficient = -100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.feedback_coefficient = 100000.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.feedback_coefficient = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("feedback_coefficient", "double", 0, "Selected feedback sensor feedback coefficient", "", &TalonConfigConfig::feedback_coefficient)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("feedback_coefficient", "double", 0, "Selected feedback sensor feedback coefficient", "", &TalonConfigConfig::feedback_coefficient)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_local_forward_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_local_forward_source = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_local_forward_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_forward_source", "int", 0, "Which forward limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 122, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchSource_Uninitialized'}, {'srcline': 123, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'FeedbackConnector'}, {'srcline': 124, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'RemoteTalonSRX'}, {'srcline': 125, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'RemoteCANifier'}, {'srcline': 126, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'Deactivated'}]}", &TalonConfigConfig::limit_switch_local_forward_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_forward_source", "int", 0, "Which forward limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 122, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchSource_Uninitialized'}, {'srcline': 123, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'FeedbackConnector'}, {'srcline': 124, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'RemoteTalonSRX'}, {'srcline': 125, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'RemoteCANifier'}, {'srcline': 126, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'Deactivated'}]}", &TalonConfigConfig::limit_switch_local_forward_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_local_forward_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_local_forward_normal = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_local_forward_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_forward_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_local_forward_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_forward_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_local_forward_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_local_reverse_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_local_reverse_source = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_local_reverse_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_reverse_source", "int", 0, "Which reverse limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 122, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchSource_Uninitialized'}, {'srcline': 123, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'FeedbackConnector'}, {'srcline': 124, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'RemoteTalonSRX'}, {'srcline': 125, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'RemoteCANifier'}, {'srcline': 126, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'Deactivated'}]}", &TalonConfigConfig::limit_switch_local_reverse_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_reverse_source", "int", 0, "Which reverse limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 122, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchSource_Uninitialized'}, {'srcline': 123, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'FeedbackConnector'}, {'srcline': 124, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'RemoteTalonSRX'}, {'srcline': 125, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'RemoteCANifier'}, {'srcline': 126, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'Deactivated'}]}", &TalonConfigConfig::limit_switch_local_reverse_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_local_reverse_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_local_reverse_normal = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_local_reverse_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_reverse_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_local_reverse_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_local_reverse_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_local_reverse_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_remote_forward_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_remote_forward_source = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_remote_forward_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_forward_source", "int", 0, "Which remote forward limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 140, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'RemoteLimitSwitchSource_Uninitialized'}, {'srcline': 141, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteTalonSRX'}, {'srcline': 142, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteCANifier'}, {'srcline': 143, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Remote_Deactivated'}]}", &TalonConfigConfig::limit_switch_remote_forward_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_forward_source", "int", 0, "Which remote forward limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 140, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'RemoteLimitSwitchSource_Uninitialized'}, {'srcline': 141, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteTalonSRX'}, {'srcline': 142, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteCANifier'}, {'srcline': 143, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Remote_Deactivated'}]}", &TalonConfigConfig::limit_switch_remote_forward_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_remote_forward_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_remote_forward_normal = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_remote_forward_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_forward_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_remote_forward_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_forward_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_remote_forward_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_remote_reverse_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_remote_reverse_source = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_remote_reverse_source = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_reverse_source", "int", 0, "Which remote reverse limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 140, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'RemoteLimitSwitchSource_Uninitialized'}, {'srcline': 141, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteTalonSRX'}, {'srcline': 142, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteCANifier'}, {'srcline': 143, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Remote_Deactivated'}]}", &TalonConfigConfig::limit_switch_remote_reverse_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_reverse_source", "int", 0, "Which remote reverse limit switch is being used", "{'enum_description': '', 'enum': [{'srcline': 140, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'RemoteLimitSwitchSource_Uninitialized'}, {'srcline': 141, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteTalonSRX'}, {'srcline': 142, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Remote_RemoteCANifier'}, {'srcline': 143, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Remote_Deactivated'}]}", &TalonConfigConfig::limit_switch_remote_reverse_source)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.limit_switch_remote_reverse_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.limit_switch_remote_reverse_normal = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.limit_switch_remote_reverse_normal = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_reverse_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_remote_reverse_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("limit_switch_remote_reverse_normal", "int", 0, "Normally open, closed, or disabled", "{'enum_description': '', 'enum': [{'srcline': 129, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'LimitSwitchNormal_Uninitialized'}, {'srcline': 130, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NormallyOpen'}, {'srcline': 131, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NormallyClosed'}, {'srcline': 132, 'description': '', 'srcfile': '/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}]}", &TalonConfigConfig::limit_switch_remote_reverse_normal)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.conversion_factor = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.conversion_factor = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.conversion_factor = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("conversion_factor", "double", 0, "Arbitrary factor for scaling encoder values - use for transmissions or similar", "", &TalonConfigConfig::conversion_factor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("conversion_factor", "double", 0, "Arbitrary factor for scaling encoder values - use for transmissions or similar", "", &TalonConfigConfig::conversion_factor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.custom_profile_hz = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.custom_profile_hz = 100.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.custom_profile_hz = 20.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("custom_profile_hz", "double", 0, "hz of profiling loop", "", &TalonConfigConfig::custom_profile_hz)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<double>("custom_profile_hz", "double", 0, "hz of profiling loop", "", &TalonConfigConfig::custom_profile_hz)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.custom_profile_run = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.custom_profile_run = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.custom_profile_run = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("custom_profile_run", "bool", 0, "run the profile with below slot", "", &TalonConfigConfig::custom_profile_run)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<bool>("custom_profile_run", "bool", 0, "run the profile with below slot", "", &TalonConfigConfig::custom_profile_run)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.custom_profile_slot = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.custom_profile_slot = 3;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.custom_profile_slot = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("custom_profile_slot", "int", 0, "if profile is run this slot will be used", "", &TalonConfigConfig::custom_profile_slot)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(TalonConfigConfig::AbstractParamDescriptionConstPtr(new TalonConfigConfig::ParamDescription<int>("custom_profile_slot", "int", 0, "if profile is run this slot will be used", "", &TalonConfigConfig::custom_profile_slot)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(TalonConfigConfig::AbstractGroupDescriptionConstPtr(new TalonConfigConfig::GroupDescription<TalonConfigConfig::DEFAULT, TalonConfigConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<TalonConfigConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<TalonConfigConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<TalonConfigConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    TalonConfigConfig __max__;
    TalonConfigConfig __min__;
    TalonConfigConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const TalonConfigConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static TalonConfigConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &TalonConfigConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const TalonConfigConfig &TalonConfigConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const TalonConfigConfig &TalonConfigConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const TalonConfigConfig &TalonConfigConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<TalonConfigConfig::AbstractParamDescriptionConstPtr> &TalonConfigConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<TalonConfigConfig::AbstractGroupDescriptionConstPtr> &TalonConfigConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const TalonConfigConfigStatics *TalonConfigConfig::__get_statics__()
  {
    const static TalonConfigConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = TalonConfigConfigStatics::get_instance();

    return statics;
  }

//#line 30 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_DemandType_Neutral = 0;
//#line 31 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_DemandType_AuxPID = 1;
//#line 32 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_DemandType_ArbitraryFeedForward = 2;
//#line 42 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Feedback_Uninitialized = 0;
//#line 43 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_QuadEncoder = 1;
//#line 44 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Analog = 2;
//#line 45 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Tachometer = 3;
//#line 46 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_PulseWidthEncodedPosition = 4;
//#line 47 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_SensorSum = 5;
//#line 48 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_SensorDifference = 6;
//#line 49 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Inertial = 7;
//#line 50 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_RemoteSensor = 8;
//#line 51 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_SoftwareEmulatedSensor = 9;
//#line 52 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_CTRE_Magencoder_Absolute = 4;
//#line 53 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_CTRE_Magencoder_Relative = 1;
//#line 69 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_1Ms = 1;
//#line 70 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_2Ms = 2;
//#line 71 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_5Ms = 5;
//#line 72 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_10Ms = 10;
//#line 73 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_20Ms = 20;
//#line 74 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_25Ms = 25;
//#line 75 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_50Ms = 50;
//#line 76 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Period_100Ms = 100;
//#line 115 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_NeutralMode_Uninitialized = 0;
//#line 116 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_EEPROM_Setting = 1;
//#line 117 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Coast = 2;
//#line 118 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Brake = 3;
//#line 122 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_LimitSwitchSource_Uninitialized = 0;
//#line 123 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_FeedbackConnector = 1;
//#line 124 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_RemoteTalonSRX = 2;
//#line 125 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_RemoteCANifier = 3;
//#line 126 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Deactivated = 4;
//#line 129 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_LimitSwitchNormal_Uninitialized = 0;
//#line 130 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_NormallyOpen = 1;
//#line 131 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_NormallyClosed = 2;
//#line 132 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Disabled = 3;
//#line 140 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_RemoteLimitSwitchSource_Uninitialized = 0;
//#line 141 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Remote_RemoteTalonSRX = 1;
//#line 142 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Remote_RemoteCANifier = 2;
//#line 143 "/home/niallmullane/racecar_ws/racecar_ws/src/talon_controllers/cfg/TalonConfig.cfg"
      const int TalonConfig_Remote_Deactivated = 3;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __TALONCONFIGRECONFIGURATOR_H__
