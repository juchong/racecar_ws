ext {
    nativeName = 'ntcore'
    devMain = 'edu.wpi.first.ntcore.DevMain'
}

apply from: "${rootDir}/shared/jni/setupBuild.gradle"

model {
    // Exports config is a utility to enable exporting all symbols in a C++ library on windows to a DLL.
    // This removes the need for DllExport on a library. However, the gradle C++ builder has a bug
    // where some extra symbols are added that cannot be resolved at link time. This configuration
    // lets you specify specific symbols to exlude from exporting.
    exportsConfigs {
        ntcore(ExportsConfig) {
            x86ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                                 '_CT??_R0?AVbad_cast',
                                 '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                                 '_TI5?AVfailure']
            x64ExcludeSymbols = ['_CT??_R0?AV_System_error', '_CT??_R0?AVexception', '_CT??_R0?AVfailure',
                                 '_CT??_R0?AVbad_cast',
                                 '_CT??_R0?AVruntime_error', '_CT??_R0?AVsystem_error', '_CTA5?AVfailure',
                                 '_TI5?AVfailure']
        }
        ntcoreJNI(ExportsConfig) {
            x86SymbolFilter = { symbols ->
                def retList = []
                symbols.each { symbol ->
                    if (symbol.startsWith('NT_')) {
                        retList << symbol
                    }
                }
                return retList
            }
            x64SymbolFilter = { symbols ->
                def retList = []
                symbols.each { symbol ->
                    if (symbol.startsWith('NT_')) {
                        retList << symbol
                    }
                }
                return retList
            }
        }
    }
}

pmdMain {
    pmdMain.enabled = false
}
